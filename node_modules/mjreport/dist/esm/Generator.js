import { PaperType } from './PaperType';
import { Tags, HeadingLevel } from './Common';
var Generator = (function () {
    function Generator(title, paperType) {
        if (title === void 0) { title = 'MJ-Report Print Preview'; }
        if (paperType === void 0) { paperType = PaperType.A4_Portrait; }
        this.title = title;
        this.paperType = paperType;
        this.style = '';
        this.headCss = [];
        this.content = [];
        this.header = [];
        this.footer = [];
    }
    Generator.prototype.setStyle = function (rawCss) {
        this.style = rawCss;
    };
    Generator.prototype.addCss = function (link) {
        this.headCss.push(link);
    };
    Generator.prototype.addText = function (text, className, idName) {
        return { tag: Tags.Text, value: { text: text }, className: className, idName: idName };
    };
    Generator.prototype.addHeading = function (text, level, className, idName) {
        if (level === void 0) { level = HeadingLevel.H1; }
        return { tag: Tags.Heading, value: { text: text, level: level }, className: className, idName: idName };
    };
    Generator.prototype.addPageBreak = function () {
        return { tag: Tags.PageBreak };
    };
    Generator.prototype.addTable = function (value, className, idName) {
        return { tag: Tags.Table, value: value, className: className, idName: idName };
    };
    Generator.prototype.setContent = function (elements) {
        this.content = elements;
    };
    Generator.prototype.setHeader = function (elements) {
        this.header = elements;
    };
    Generator.prototype.setFooter = function (elements) {
        this.footer = elements;
    };
    Generator.prototype.generate = function () {
        var metaData = {
            title: this.title,
            css: this.headCss,
            paperType: this.paperType,
            style: this.style
        };
        var data = {
            metaData: metaData,
            header: this.header,
            footer: this.footer,
            content: this.content,
        };
        return data;
    };
    return Generator;
}());
export { Generator };
